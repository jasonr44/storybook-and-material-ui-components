// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Example/Button Large 1`] = `
<button
  className="storybook-button storybook-button--large storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Primary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--primary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Secondary 1`] = `
<button
  className="storybook-button storybook-button--medium storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Button Small 1`] = `
<button
  className="storybook-button storybook-button--small storybook-button--secondary"
  style={
    Object {
      "backgroundColor": undefined,
    }
  }
  type="button"
>
  Button
</button>
`;

exports[`Storyshots Example/Header Logged In 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log out
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Header Logged Out 1`] = `
<header>
  <div
    className="wrapper"
  >
    <div>
      <svg
        height="32"
        viewBox="0 0 32 32"
        width="32"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
            fill="#FFF"
          />
          <path
            d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
            fill="#555AB9"
          />
          <path
            d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
            fill="#91BAF8"
          />
        </g>
      </svg>
      <h1>
        Acme
      </h1>
    </div>
    <div>
      <button
        className="storybook-button storybook-button--small storybook-button--secondary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Log in
      </button>
      <button
        className="storybook-button storybook-button--small storybook-button--primary"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
        type="button"
      >
        Sign up
      </button>
    </div>
  </div>
</header>
`;

exports[`Storyshots Example/Page Logged In 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log out
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Example/Page Logged Out 1`] = `
<article>
  <header>
    <div
      className="wrapper"
    >
      <div>
        <svg
          height="32"
          viewBox="0 0 32 32"
          width="32"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <path
              d="M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z"
              fill="#FFF"
            />
            <path
              d="M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z"
              fill="#555AB9"
            />
            <path
              d="M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z"
              fill="#91BAF8"
            />
          </g>
        </svg>
        <h1>
          Acme
        </h1>
      </div>
      <div>
        <button
          className="storybook-button storybook-button--small storybook-button--secondary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Log in
        </button>
        <button
          className="storybook-button storybook-button--small storybook-button--primary"
          style={
            Object {
              "backgroundColor": undefined,
            }
          }
          type="button"
        >
          Sign up
        </button>
      </div>
    </div>
  </header>
  <section>
    <h2>
      Pages in Storybook
    </h2>
    <p>
      We recommend building UIs with a
       
      <a
        href="https://componentdriven.org"
        rel="noopener noreferrer"
        target="_blank"
      >
        <strong>
          component-driven
        </strong>
      </a>
       
      process starting with atomic components and ending with pages.
    </p>
    <p>
      Render pages with mock data. This makes it easy to build and review page states without needing to navigate to them in your app. Here are some handy patterns for managing page data in Storybook:
    </p>
    <ul>
      <li>
        Use a higher-level connected component. Storybook helps you compose such data from the "args" of child component stories
      </li>
      <li>
        Assemble data in the page component from your services. You can mock these services out using Storybook.
      </li>
    </ul>
    <p>
      Get a guided tutorial on component-driven development at
       
      <a
        href="https://www.learnstorybook.com"
        rel="noopener noreferrer"
        target="_blank"
      >
        Learn Storybook
      </a>
      . Read more in the
       
      <a
        href="https://storybook.js.org/docs"
        rel="noopener noreferrer"
        target="_blank"
      >
        docs
      </a>
      .
    </p>
    <div
      className="tip-wrapper"
    >
      <span
        className="tip"
      >
        Tip
      </span>
       Adjust the width of the canvas with the
       
      <svg
        height="10"
        viewBox="0 0 12 12"
        width="10"
        xmlns="http://www.w3.org/2000/svg"
      >
        <g
          fill="none"
          fillRule="evenodd"
        >
          <path
            d="M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z"
            fill="#999"
            id="a"
          />
        </g>
      </svg>
      Viewports addon in the toolbar
    </div>
  </section>
</article>
`;

exports[`Storyshots Task Archived 1`] = `
<div
  className="list-item TASK_ARCHIVED"
>
  <span
    aria-disabled={false}
    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-9 MuiCheckbox-root MuiCheckbox-colorSecondary list-item-checkbox PrivateSwitchBase-checked-10 Mui-checked MuiIconButton-colorSecondary"
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={null}
  >
    <span
      className="MuiIconButton-label"
    >
      <input
        className="PrivateSwitchBase-input-12"
        data-indeterminate={false}
        defaultChecked={true}
        name="archiveCheckbox"
        onChange={[Function]}
        type="checkbox"
      />
      <svg
        aria-hidden={true}
        className="MuiSvgIcon-root"
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
        />
      </svg>
    </span>
  </span>
  <div
    className="list-item-title"
  >
    <div
      className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
    >
      <div
        className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
        onClick={[Function]}
      >
        <input
          aria-invalid={false}
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input"
          disabled={false}
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Input title"
          required={false}
          style={
            Object {
              "textOverflow": "ellipsis",
            }
          }
          type="text"
          value="Test Task"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Task Default 1`] = `
<div
  className="list-item TASK_INBOX"
>
  <span
    aria-disabled={false}
    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorSecondary list-item-checkbox MuiIconButton-colorSecondary"
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={null}
  >
    <span
      className="MuiIconButton-label"
    >
      <input
        className="PrivateSwitchBase-input-4"
        data-indeterminate={false}
        defaultChecked={false}
        name="archiveCheckbox"
        onChange={[Function]}
        type="checkbox"
      />
      <svg
        aria-hidden={true}
        className="MuiSvgIcon-root"
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
        />
      </svg>
    </span>
  </span>
  <div
    className="list-item-title"
  >
    <div
      className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
    >
      <div
        className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
        onClick={[Function]}
      >
        <input
          aria-invalid={false}
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input"
          disabled={false}
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Input title"
          required={false}
          style={
            Object {
              "textOverflow": "ellipsis",
            }
          }
          type="text"
          value="Test Task"
        />
      </div>
    </div>
  </div>
  <span
    aria-disabled={false}
    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-1 MuiCheckbox-root MuiCheckbox-colorSecondary list-item-pin MuiIconButton-colorSecondary"
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={null}
  >
    <span
      className="MuiIconButton-label"
    >
      <input
        className="PrivateSwitchBase-input-4"
        data-indeterminate={false}
        defaultChecked={false}
        name="pinCheckbox"
        onChange={[Function]}
        type="checkbox"
      />
      <svg
        aria-hidden={true}
        className="MuiSvgIcon-root MuiSvgIcon-fontSizeSmall"
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M22 9.24l-7.19-.62L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21 12 17.27 18.18 21l-1.63-7.03L22 9.24zM12 15.4l-3.76 2.27 1-4.28-3.32-2.88 4.38-.38L12 6.1l1.71 4.04 4.38.38-3.32 2.88 1 4.28L12 15.4z"
        />
      </svg>
    </span>
  </span>
</div>
`;

exports[`Storyshots Task Pinned 1`] = `
<div
  className="list-item TASK_PINNED"
>
  <span
    aria-disabled={false}
    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-5 MuiCheckbox-root MuiCheckbox-colorSecondary list-item-checkbox MuiIconButton-colorSecondary"
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={null}
  >
    <span
      className="MuiIconButton-label"
    >
      <input
        className="PrivateSwitchBase-input-8"
        data-indeterminate={false}
        defaultChecked={false}
        name="archiveCheckbox"
        onChange={[Function]}
        type="checkbox"
      />
      <svg
        aria-hidden={true}
        className="MuiSvgIcon-root"
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
        />
      </svg>
    </span>
  </span>
  <div
    className="list-item-title"
  >
    <div
      className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
    >
      <div
        className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl"
        onClick={[Function]}
      >
        <input
          aria-invalid={false}
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input"
          disabled={false}
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Input title"
          required={false}
          style={
            Object {
              "textOverflow": "ellipsis",
            }
          }
          type="text"
          value="Test Task"
        />
      </div>
    </div>
  </div>
  <span
    aria-disabled={false}
    className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-5 MuiCheckbox-root MuiCheckbox-colorSecondary list-item-pin PrivateSwitchBase-checked-6 Mui-checked MuiIconButton-colorSecondary"
    onBlur={[Function]}
    onDragLeave={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    onTouchEnd={[Function]}
    onTouchMove={[Function]}
    onTouchStart={[Function]}
    tabIndex={null}
  >
    <span
      className="MuiIconButton-label"
    >
      <input
        className="PrivateSwitchBase-input-8"
        data-indeterminate={false}
        defaultChecked={true}
        name="pinCheckbox"
        onChange={[Function]}
        type="checkbox"
      />
      <svg
        aria-hidden={true}
        className="MuiSvgIcon-root MuiSvgIcon-colorPrimary MuiSvgIcon-fontSizeSmall"
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z"
        />
      </svg>
    </span>
  </span>
</div>
`;
